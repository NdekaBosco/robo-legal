// components/Reports.tsx
import React, { useState } from 'react';
import { User } from '../types/user';

interface Report {
  id: string;
  title: string;
  description: string;
  frequency: string;
  lastRun: string;
}

interface ReportsProps {
  user: User;
}

const Reports: React.FC<ReportsProps> = ({ user }) => {
  const [reports, setReports] = useState<Report[]>([
    { id: '1', title: 'Revenue by Lawyer', description: 'Shows revenue generated by each lawyer', frequency: 'Monthly', lastRun: '2023-07-01' },
    { id: '2', title: 'Billable Hours Report', description: 'Detailed breakdown of billable hours by case and lawyer', frequency: 'Weekly', lastRun: '2023-07-17' },
    { id: '3', title: 'Case Outcomes Analysis', description: 'Analysis of case outcomes by type and lawyer', frequency: 'Quarterly', lastRun: '2023-06-30' },
    { id: '4', title: 'Client Satisfaction', description: 'Client feedback and satisfaction ratings', frequency: 'Monthly', lastRun: '2023-07-10' },
    { id: '5', title: 'Accounts Receivable', description: 'Outstanding invoices and aging report', frequency: 'Weekly', lastRun: '2023-07-17' },
  ]);

  const [selectedReport, setSelectedReport] = useState<string | null>(null);

  // Mock data for charts and reports
  const revenueByLawyer = [
    { name: 'Sarah Johnson', value: 42500 },
    { name: 'Michael Chen', value: 38250 },
    { name: 'Emily Rodriguez', value: 29750 },
    { name: 'David Wilson', value: 21500 },
  ];

  const billableHoursData = [
    { month: 'Jan', hours: 420 },
    { month: 'Feb', hours: 380 },
    { month: 'Mar', hours: 450 },
    { month: 'Apr', hours: 410 },
    { month: 'May', hours: 480 },
    { month: 'Jun', hours: 520 },
    { month: 'Jul', hours: 470 },
  ];

  const caseTypesData = [
    { type: 'Contract Law', value: 35 },
    { type: 'Real Estate', value: 25 },
    { type: 'Intellectual Property', value: 15 },
    { type: 'Employment Law', value: 12 },
    { type: 'Tax Law', value: 8 },
    { type: 'Other', value: 5 },
  ];

  const formatCurrency = (amount: number) => {
    return new Intl.NumberFormat('en-US', {
      style: 'currency',
      currency: 'USD',
    }).format(amount);
  };

  return (
    <div className="space-y-6">
      <div className="flex justify-between items-center">
        <h1 className="text-2xl font-semibold text-gray-900">Reports & Analytics</h1>
        <button className="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
          Generate Custom Report
        </button>
      </div>

      <div className="grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4">
        <div className="bg-white overflow-hidden shadow rounded-lg">
          <div className="px-4 py-5 sm:p-6">
            <div className="flex items-center">
              <div className="flex-shrink-0 bg-indigo-500 rounded-md p-3">
                <svg className="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
              </div>
              <div className="ml-5 w-0 flex-1">
                <dl>
                  <dt className="text-sm font-medium text-gray-500 truncate">Total Revenue</dt>
                  <dd>
                    <div className="text-lg font-semibold text-gray-900">{formatCurrency(132000)}</div>
                  </dd>
                </dl>
              </div>
            </div>
          </div>
        </div>

        <div className="bg-white overflow-hidden shadow rounded-lg">
          <div className="px-4 py-5 sm:p-6">
            <div className="flex items-center">
              <div className="flex-shrink-0 bg-green-500 rounded-md p-3">
                <svg className="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
              </div>
              <div className="ml-5 w-0 flex-1">
                <dl>
                  <dt className="text-sm font-medium text-gray-500 truncate">Billable Hours</dt>
                  <dd>
                    <div className="text-lg font-semibold text-gray-900">3,130</div>
                  </dd>
                </dl>
              </div>
            </div>
          </div>
        </div>

        <div className="bg-white overflow-hidden shadow rounded-lg">
          <div className="px-4 py-5 sm:p-6">
            <div className="flex items-center">
              <div className="flex-shrink-0 bg-blue-500 rounded-md p-3">
                <svg className="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                </svg>
              </div>
              <div className="ml-5 w-0 flex-1">
                <dl>
                  <dt className="text-sm font-medium text-gray-500 truncate">Active Cases</dt>
                  <dd>
                    <div className="text-lg font-semibold text-gray-900">28</div>
                  </dd>
                </dl>
              </div>
            </div>
          </div>
        </div>

        <div className="bg-white overflow-hidden shadow rounded-lg">
          <div className="px-4 py-5 sm:p-6">
            <div className="flex items-center">
              <div className="flex-shrink-0 bg-yellow-500 rounded-md p-3">
                <svg className="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
                </svg>
              </div>
              <div className="ml-5 w-0 flex-1">
                <dl>
                  <dt className="text-sm font-medium text-gray-500 truncate">Total Clients</dt>
                  <dd>
                    <div className="text-lg font-semibold text-gray-900">42</div>
                  </dd>
                </dl>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div className="grid grid-cols-1 gap-6 lg:grid-cols-2">
        <div className="bg-white shadow rounded-lg p-6">
          <h3 className="text-lg font-medium text-gray-900 mb-4">Revenue by Lawyer</h3>
          <div className="space-y-4">
            {revenueByLawyer.map((lawyer) => (
              <div key={lawyer.name}>
                <div className="flex justify-between text-sm text-gray-500 mb-1">
                  <span>{lawyer.name}</span>
                  <span>{formatCurrency(lawyer.value)}</span>
                </div>
                <div className="w-full bg-gray-200 rounded-full h-2">
                  <div 
                    className="bg-indigo-600 h-2 rounded-full" 
                    style={{ width: `${(lawyer.value / 50000) * 100}%` }}
                  ></div>
                </div>
              </div>
            ))}
          </div>
        </div>

        <div className="bg-white shadow rounded-lg p-6">
          <h3 className="text-lg font-medium text-gray-900 mb-4">Billable Hours Trend</h3>
          <div className="flex items-end space-x-2 h-40">
            {billableHoursData.map((data) => (
              <div key={data.month} className="flex flex-col items-center flex-1">
                <div 
                  className="w-full bg-indigo-600 rounded-t" 
                  style={{ height: `${(data.hours / 600) * 100}%` }}
                ></div>
                <div className="text-xs text-gray-500 mt-1">{data.month}</div>
              </div>
            ))}
          </div>
        </div>
      </div>

      <div className="bg-white shadow overflow-hidden rounded-lg">
        <div className="px-6 py-5 border-b border-gray-200">
          <h2 className="text-lg font-medium text-gray-900">Standard Reports</h2>
        </div>
        <div className="px-6 py-5">
          <ul className="divide-y divide-gray-200">
            {reports.map((report) => (
              <li key={report.id} className="py-4">
                <div className="flex items-center justify-between">
                  <div className="flex items-center">
                    <div className="h-10 w-10 flex-shrink-0 bg-indigo-100 rounded-full flex items-center justify-center">
                      <svg className="h-6 w-6 text-indigo-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                      </svg>
                    </div>
                    <div className="ml-4">
                      <div className="text-sm font-medium text-gray-900">{report.title}</div>
                      <div className="text-sm text-gray-500">{report.description}</div>
                      <div className="text-sm text-gray-500">Frequency: {report.frequency} â€¢ Last run: {report.lastRun}</div>
                    </div>
                  </div>
                  <div>
                    <button className="inline-flex items-center px-3 py-1 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                      Generate
                    </button>
                  </div>
                </div>
              </li>
            ))}
          </ul>
        </div>
      </div>
    </div>
  );
};

export default Reports;